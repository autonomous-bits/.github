name: Service CI/CD

on:
  workflow_call:
    inputs:
      service-name:
        description: 'Name of the service'
        required: true
        type: string
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '18'
      build-command:
        description: 'Build command to run'
        required: false
        type: string
        default: 'npm run build'
      test-command:
        description: 'Test command to run'
        required: false
        type: string
        default: 'npm test'
      docker-enabled:
        description: 'Whether to build Docker image'
        required: false
        type: boolean
        default: true

env:
  NODE_VERSION: ${{ inputs.node-version }}
  SERVICE_NAME: ${{ inputs.service-name }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Run tests
      run: ${{ inputs.test-command }}

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: ${{ inputs.build-command }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ env.SERVICE_NAME }}
        path: dist/

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, build]
    if: ${{ inputs.docker-enabled }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ${{ env.SERVICE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    name: Security
    uses: ./.github/workflows/security-scan.yml
    with:
      language: 'typescript'
      node-version: ${{ inputs.node-version }}
